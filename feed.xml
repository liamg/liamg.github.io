<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://liam-galvin.co.uk/feed.xml" rel="self" type="application/atom+xml" /><link href="https://liam-galvin.co.uk/" rel="alternate" type="text/html" /><updated>2020-10-10T21:07:02+00:00</updated><id>https://liam-galvin.co.uk/feed.xml</id><title type="html">Liam Galvin</title><subtitle>Personal dumping ground of an engineer, hacker, and general code mangler.</subtitle><entry><title type="html">Leaking Git Repositories From Misconfigured Sites</title><link href="https://liam-galvin.co.uk/security/2020/09/26/leaking-git-repos-from-misconfigured-sites.html" rel="alternate" type="text/html" title="Leaking Git Repositories From Misconfigured Sites" /><published>2020-09-26T11:53:48+00:00</published><updated>2020-09-26T11:53:48+00:00</updated><id>https://liam-galvin.co.uk/security/2020/09/26/leaking-git-repos-from-misconfigured-sites</id><content type="html" xml:base="https://liam-galvin.co.uk/security/2020/09/26/leaking-git-repos-from-misconfigured-sites.html">&lt;p&gt;Many deployment mechanisms for web applications exist in which the contents of a repository is copied onto a production server, whether this is by building the files into a Docker container, or simply transferring them directly onto a webserver. This can often result in the publishing of sensitive files such as CI configs, READMEs, and the one we’re going to focus on today: .git directories.&lt;/p&gt;

&lt;p&gt;A .git directory stores all of your repository data, such as configuration, commit history, and actual content of each file in the repository. If you can retrieve the full contents of a .git directory for a given website, you will be able to access raw source code for that site, and often juicy configuration data like database passwords, password salts, and more.&lt;/p&gt;

&lt;p&gt;Webservers with directory listings enabled make this kind of attack especially easy, as it’s simply a matter of recursively downloading every file in the .git directory and running the following to pull files from the stored object files:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git checkout &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can typically achieve the recursive download with&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget &lt;span class=&quot;nt&quot;&gt;--np&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; http://TARGET/.git/&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The attack is still possible when directory listings are disabled, but it’s often difficult to retrieve a complete repository in such cases. This is where &lt;a href=&quot;https://github.com/liamg/gitjacker&quot;&gt;gitjacker&lt;/a&gt; comes in. Gitjacker will handle the download and extraction of a git repository for you.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/liamg/gitjacker/master/demo.gif&quot; alt=&quot;gitjacker demo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It works by looking for common Git paths such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git/config&lt;/code&gt;, and parsing references to other files from these, essentially spidering the repository and retrieving everything which is discovered.&lt;/p&gt;

&lt;p&gt;You can download the latest release &lt;a href=&quot;https://github.com/liamg/gitjacker/releases&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="security" /><summary type="html">Many deployment mechanisms for web applications exist in which the contents of a repository is copied onto a production server, whether this is by building the files into a Docker container, or simply transferring them directly onto a webserver. This can often result in the publishing of sensitive files such as CI configs, READMEs, and the one we’re going to focus on today: .git directories.</summary></entry></feed>